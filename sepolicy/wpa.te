# wpa - wpa supplicant or equivalent
type wpa_hisi, domain, domain_deprecated;
type wpa_hisi_exec, exec_type, file_type;

init_daemon_domain(wpa_hisi)

net_domain(wpa_hisi)

allow wpa_hisi kernel:system module_request;
allow wpa_hisi self:capability { setuid net_admin setgid net_raw };
allow wpa_hisi cgroup:dir create_dir_perms;
allow wpa_hisi self:netlink_route_socket nlmsg_write;
allow wpa_hisi self:netlink_socket create_socket_perms;
allow wpa_hisi self:netlink_generic_socket create_socket_perms;
allow wpa_hisi self:packet_socket create_socket_perms;
allow wpa_hisi wifi_data_file:dir create_dir_perms;
allow wpa_hisi wifi_data_file:file create_file_perms;
unix_socket_send(wpa, system_wpa, system_server)

binder_use(wpa)

# Create a socket for receiving info from wpa
type_transition wpa_hisi wifi_data_file:dir wpa_socket "sockets";
allow wpa wpa_socket:dir create_dir_perms;
allow wpa wpa_socket:sock_file create_file_perms;

use_keystore(wpa)

# WPA (wifi) has a restricted set of permissions from the default.
allow wpa keystore:keystore_key {
	get
	sign
	verify
};

# Allow wpa_cli to work. wpa_cli creates a socket in
# /data/misc/wifi/sockets which wpa supplicant communicates with.
userdebug_or_eng(`
  unix_socket_send(wpa, wpa, su)
')

###
### neverallow rules
###

# wpa_supplicant should not trust any data from sdcards
neverallow wpa_hisi sdcard_type:dir ~getattr;
neverallow wpa_hisi sdcard_type:file *;
